export const pastWork= [
    {title: "Pipelined RISCV CPU on FPGA",
    subtitle: "Verilog and Xilinx Vivado",
    description: "I designed, implemented, and ran a three-stage pipelined RISCV processor on a Xilinx PYNQ-Z1 FPGA complete with forwarding that eliminates stalling from all data hazards. In addition, the processor included a custom branch predictor that achieved 93.4% prediction accuracy on a 64X64 matrix multiplication benchmark.",
    image: "/src/cpu.png",
    link: "#past-work",
    },
    {title: "Approximating Disc Cover with NP-Hard Solver",
    subtitle: "Python and CPLEX",
    description: "I created a near perfect approximation model over large (100x100) input planes for a modified version of the NP-Hard Discrete Disc Cover problem with an exponential cost function. This was done by modeling the problem as a mixed integer linear program (ILP) using the docplex API and solved using the IBM CPLEX industrial LP solver. The model was within 1% of optimal solution for any input.",
    image: "/src/dudc.png",
    link: "#past-work",
    },
    {title: "Cryptographically Secure Filesystem",
    subtitle: "Go",
    description: "I designed, implemented, and tested a cryptographically secure filesystem allowing for multiple users on multiple clients to store, retrieve, append to, share access, and revoke access to files. This was accomplished using a variety of methods such as cryptographic hashing, symmetric and asymmetric key cryptography, and custom data structures for constant time appends to files.",
    image: "/src/cryptography.png",
    link: "#past-work",
    },
    {title: "Optimized Matrix Operation Library",
    subtitle: "C, Intel Intrinsics, and Open MP",
    description: "I implemented a small library of highly optimized elementary vector and matrix operations in C using Intel Intrinsics instruction sets and techniques such as parallelization, SIMD, and cache blocking. These optimizations resulted in significant speedup over naive implementations of the same operations and efficiency on the same magnitude as BLAS libraries.",
    image: "/src/numc.png",
    link: "#past-work",
    },
    {title: "Matrix to Dendrogram",
    subtitle: "Perl and PostScript",
    description: "Matrix to dendrogram is a program that uses computational methods to visualize relationships among RNA structural conformations written in Perl. This was accomplished by taking data from large matrices (20,000+ entries) of simulated molecular dynamics data and visualizing them as dendrograms using agglomerative hierarchical clustering. Click on this panel to see the published work in Biophysical Journal.",
    image: "/src/dendrogram.png",
    link: "https://doi.org/10.1016/j.bpj.2022.11.010",
    },
    {title: "Gitlet",
    subtitle: "Java and Git",
    description: "Gitlet is a lite version of the Git version control system that can store, update and track files. My java implementation includes branching, merging, and remote pushing and pulling functionality.",
    image: "/src/gitlet.png",
    link: "#past-work",
    },
    {title: "Scheme Interpreter",
    subtitle: "Python and Scheme",
    description: "I built an interpreter in Python implementing the core features of the Scheme dialect of Lisp including a lexer, parser, evaluator, and the frameworks for special methods, including mu methods, which allow for dynamic scoping.",
    image: "/src/scheme.png",
    link: "#past-work",
    },
    {title: "Assessing Small Molecule Efficacy",
    subtitle: "Fluorescence Assays and PCR",
    description: "I asessed the efficacy and competitiveness of RNA-binding small molecules found by the INFORNA structural analysis platform. Specifically, I assessed a small moleule that targeted miRNA-377, a disease causing RNA related a decrease in blood vessel production following heart failure. Click on this panel to see the published work in Nature Chemistry.",
    image: "/src/inforna.png",
    link: "https://www.nature.com/articles/s41557-020-0514-4",
    }
];
